[{"D:\\Projects\\QCM-recruitments\\src\\index.js":"1","D:\\Projects\\QCM-recruitments\\src\\components\\App.jsx":"2","D:\\Projects\\QCM-recruitments\\src\\components\\Landing.jsx":"3","D:\\Projects\\QCM-recruitments\\src\\components\\LeaderBoard.jsx":"4","D:\\Projects\\QCM-recruitments\\src\\components\\Instructions.jsx":"5","D:\\Projects\\QCM-recruitments\\src\\components\\AdminAuth.jsx":"6","D:\\Projects\\QCM-recruitments\\src\\components\\Admin.jsx":"7","D:\\Projects\\QCM-recruitments\\src\\components\\NotFound.jsx":"8","D:\\Projects\\QCM-recruitments\\src\\components\\Quiz.jsx":"9","D:\\Projects\\QCM-recruitments\\src\\components\\Score.jsx":"10","D:\\Projects\\QCM-recruitments\\src\\firebase.js":"11","D:\\Projects\\QCM-recruitments\\src\\components\\Brand.jsx":"12","D:\\Projects\\QCM-recruitments\\src\\components\\Event.jsx":"13","D:\\Projects\\QCM-recruitments\\src\\components\\TestNotStarted.jsx":"14","D:\\Projects\\QCM-recruitments\\src\\components\\Timer.jsx":"15","D:\\Projects\\QCM-recruitments\\src\\components\\SocialMedia.jsx":"16"},{"size":222,"mtime":1624538078885,"results":"17","hashOfConfig":"18"},{"size":1414,"mtime":1624538078874,"results":"19","hashOfConfig":"18"},{"size":6669,"mtime":1624559697321,"results":"20","hashOfConfig":"18"},{"size":1941,"mtime":1624538078878,"results":"21","hashOfConfig":"18"},{"size":3568,"mtime":1624558719014,"results":"22","hashOfConfig":"18"},{"size":2198,"mtime":1624538078873,"results":"23","hashOfConfig":"18"},{"size":5248,"mtime":1624560485246,"results":"24","hashOfConfig":"18"},{"size":669,"mtime":1624538078878,"results":"25","hashOfConfig":"18"},{"size":12434,"mtime":1624560677081,"results":"26","hashOfConfig":"18"},{"size":4531,"mtime":1624538078882,"results":"27","hashOfConfig":"18"},{"size":529,"mtime":1624540083887,"results":"28","hashOfConfig":"18"},{"size":611,"mtime":1624557940922,"results":"29","hashOfConfig":"18"},{"size":213,"mtime":1624559159421,"results":"30","hashOfConfig":"18"},{"size":930,"mtime":1624558133851,"results":"31","hashOfConfig":"18"},{"size":1807,"mtime":1624538078884,"results":"32","hashOfConfig":"18"},{"size":959,"mtime":1624538078882,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"17w0f5g",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Projects\\QCM-recruitments\\src\\index.js",[],["70","71"],"D:\\Projects\\QCM-recruitments\\src\\components\\App.jsx",[],"D:\\Projects\\QCM-recruitments\\src\\components\\Landing.jsx",["72"],"import {React, useState, useEffect} from 'react'\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport firebaseApp from '../firebase';\r\nimport Brand from './Brand'\r\nimport Event from './Event'\r\nimport TestNotStarted from './TestNotStarted'\r\n\r\nexport default function Landing(){\r\n    const [text, setText]=useState(\"\");\r\n    const [email,setEmail]=useState(\"\");         //email\r\n    const [tel,setTel]= useState(\"\");           //mobile\r\n    const [first,setFirst]=useState(\"\");         //first name\r\n    const [last,setLast]=useState(\"\");             //last name\r\n    const [post,setPost]=useState(\"\");             //post\r\n    const [scholar,setScholar]=useState(\"\");     //scholar no.\r\n    const [message, setMessage] =useState();\r\n\r\n    const history = useHistory();\r\n\r\n    const handleChange=(e)=>{\r\n        setText(e.target.value);\r\n        setFirst(e.target.value);\r\n    }\r\n\r\n    //Email Validation\r\n    function validateEmail(emailAdd) {\r\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return re.test(String(emailAdd).toLowerCase());\r\n    }\r\n\r\n    //register user \r\n    const register = (event)=>{\r\n        event.preventDefault();\r\n        if(first===\"\" || last===\"\" || post===\"\" || email===\"\" || tel===\"\" || scholar===\"\"){\r\n            setMessage(<p style={{'color':'#E63946', 'textAlign':'center'}}>Fill all the details first.</p>);\r\n            setTimeout(() => {\r\n                   setMessage(\"\");\r\n               }, 2000);\r\n        }else if(scholar<201109000 || scholar>201120000){\r\n            setMessage(<p style={{'color':'#E63946', 'textAlign':'center'}}>Invalid Scholar Number.</p>);\r\n            setTimeout(() => {\r\n                   setMessage(\"\");\r\n               }, 2000); \r\n        }else if(validateEmail(email)===false){\r\n            setMessage(<p style={{'color':'#E63946', 'textAlign':'center'}}>Invalid Email.</p>);\r\n            setTimeout(() => {\r\n                   setMessage(\"\");\r\n               }, 2000);\r\n        }else if(tel<1000000000 || tel>999999999999){\r\n            setMessage(<p style={{'color':'#E63946', 'textAlign':'center'}}>Invalid Mobile Number.</p>);\r\n            setTimeout(() => {\r\n                   setMessage(\"\");\r\n               }, 2000);\r\n        }else{\r\n            firebaseApp.firestore().collection(\"Users\").where('scholar', '==', scholar).onSnapshot((snapshot)=>   {\r\n            let items=[];\r\n            snapshot.forEach((doc)=>items.push(doc.data()));\r\n\r\n                if(items.length){\r\n                    setMessage(<p style={{'color':'#E63946', 'textAlign':'center'}}>You have already taken the test once.</p>);\r\n                    setTimeout(() => {\r\n                        setMessage(\"\");\r\n                    }, 2000);\r\n                }else{\r\n                    firebaseApp.firestore().collection(\"Users\").doc(first+\"-\"+last).set({\r\n                        firstName: first,\r\n                        lastName: last,\r\n                        post:post,\r\n                        email:email,\r\n                        mobile: tel,\r\n                        scholar: scholar,\r\n                        inTime:new Date().toLocaleTimeString()\r\n                    })\r\n                    history.push('/instructions');\r\n                    sessionStorage.setItem(\"name\", first);\r\n                    sessionStorage.setItem(\"sch\", scholar);  \r\n                    sessionStorage.setItem(\"auth\", true);\r\n                }\r\n        })\r\n        \r\n        }\r\n    };\r\n\r\n    //Render Form based on time\r\n    const [render, setRender]=useState(false);\r\n    const bypass=useLocation().search ===\"?letDobbyPass\";\r\n    useEffect(()=>{\r\n        let d=new Date().getTime();\r\n        let startSlot1= new Date(2021, 6, 6, 14, 0, 0, 0).getTime();\r\n        let endSlot1= new Date(2021, 6, 6, 16, 0, 0, 0).getTime();\r\n        let startSlot2= new Date(2021, 6, 6, 18, 0, 0, 0).getTime();\r\n        let endSlot2= new Date(2021, 6, 6, 20, 0, 0, 0).getTime();\r\n        if((d>startSlot1 && d<endSlot1)|| bypass ||(d>startSlot2 && d<endSlot2) ){\r\n            setRender(true);\r\n        }\r\n    });\r\n\r\n    return(\r\n    <div className='landing-page'>\r\n        <Event />\r\n        <div style={{'color':'#f1faee', 'padding':'2% 10% ', 'textAlign':'justify', 'textAlignLast':'center'}}>\r\n            <p>After another year of a successful journey, its finally time to pass the baton. Quizzersâ€™ Club MANIT, the only quizzing club of NIT Bhopal is all set to recruit new members. So, wait till the slots open, and then brainstorm over those riveting 30 questions on Mental Ability and General Knowledge.<br />All the best!</p>\r\n        </div>\r\n        {render?<div>\r\n        <h3>Hello {text} !</h3>\r\n        <div className=\"d-flex justify-content-center\">\r\n            <div>\r\n                <input value={first} onChange={handleChange} type=\"text\" placeholder=\"First Name\" required />\r\n                <input value={last} onChange={event=>setLast(event.target.value)} type=\"text\" placeholder=\"Last Name\" required />\r\n                <select value={post} onChange={event=>setPost(event.target.value)} required>\r\n                    <option value=\"\">Select your branch</option>\r\n                    <option value=\"CSE\">CSE</option>\r\n                    <option value=\"ECE\">ECE</option>\r\n                    <option value=\"Electrical\">Electrical</option>\r\n                    <option value=\"Mechanical\">Mechanical</option>\r\n                    <option value=\"Civil\">Civil</option>\r\n\t\t\t\t\t<option value=\"Chemical\">Chemical</option>\r\n                    <option value=\"MSME\">MSME</option>\r\n                    <option value=\"BArch\">BArch</option>\r\n                    <option value=\"BPlan\">BPlan</option>\r\n                </select>\r\n                <input type=\"email\" value ={email} onChange={event=>setEmail(event.target.value)}  placeholder=\"Email Address\" required />\r\n                <input value={tel} onChange={event=>setTel(event.target.value)} type=\"tel\" placeholder=\"Mobile Number\" required />\r\n                <input value={scholar} onChange={event=>setScholar(event.target.value)} type=\"number\" placeholder=\"Scholar Number\" required />\r\n            </div>\r\n        </div>\r\n        <div className=\"d-flex justify-content-center\"><button onClick={register}>Submit</button></div>\r\n        {message}\r\n        <br />\r\n        <p style={{'color':'#f1faee', 'textAlign':'center'}}>If you face any issue, feel free to call <br /> Aman : +91 8269366460<br />Yash : +91 8529736944</p>\r\n        </div>\r\n        :\r\n        <TestNotStarted />\r\n        }\r\n        <Brand />\r\n    </div>\r\n    )\r\n}","D:\\Projects\\QCM-recruitments\\src\\components\\LeaderBoard.jsx",[],"D:\\Projects\\QCM-recruitments\\src\\components\\Instructions.jsx",[],"D:\\Projects\\QCM-recruitments\\src\\components\\AdminAuth.jsx",[],"D:\\Projects\\QCM-recruitments\\src\\components\\Admin.jsx",[],"D:\\Projects\\QCM-recruitments\\src\\components\\NotFound.jsx",[],"D:\\Projects\\QCM-recruitments\\src\\components\\Quiz.jsx",["73","74","75"],"import {React, useEffect, useState} from 'react';\r\nimport Timer from './Timer';\r\nimport firebaseApp from '../firebase'\r\nimport {useHistory, Redirect} from 'react-router-dom'\r\nimport {LinearProgress, Popover} from '@material-ui/core'\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\n\r\nexport default function Quiz() {\r\n\r\n  //Popover\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? 'simple-popover' : undefined;\r\n  //Popover\r\n\r\n  const history=useHistory();\r\n  const token=sessionStorage.getItem(\"auth\");\r\n  const numbers=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30];\r\n\r\n  //useState hook to highlight the corresponding question toggle button\r\n  let [active, setActive] =useState(0);\r\n  //Increment on pushing next button\r\n  const increment=()=>{\r\n    if(active!==30){\r\n      setActive(active+1);\r\n    }\r\n  }\r\n  //Decrement on pushing previous button\r\n  const decrement=()=>{\r\n    if(active!==0){\r\n      setActive(active-1);\r\n    }\r\n  }\r\n  useEffect(()=>{\r\n    if(document.getElementsByClassName(\"question_section\").length){\r\n    //Setting color of all the buttons to light blue\r\n    document.querySelectorAll('[data-target=\"#carouselExampleIndicators\"]').forEach((element)=>{\r\n      element.children[0].style.backgroundColor='#457B9D';\r\n    })\r\n    //Highlighting only the active button\r\n    let p=document.querySelectorAll('[data-slide-to=\"'+ (active) +'\"]')[0].children[0];\r\n    p.scrollIntoView({inline:'center', top:'-20px'});\r\n    p.style.backgroundColor=\"#06d6a0\";\r\n    }\r\n  },[numbers]);\r\n\r\n  //Selection of Collection based on time\r\n  let d=new Date().getTime();\r\n  let startSlot1= new Date(2021, 6, 6, 14, 0, 0, 0).getTime();\r\n  let endSlot1= new Date(2021, 6, 6, 16, 0, 0, 0).getTime();\r\n  let startSlot2= new Date(2021, 6, 6, 18, 0, 0, 0).getTime();\r\n  let endSlot2= new Date(2021, 6, 6, 20, 0, 0, 0).getTime();\r\n  let collection='';\r\n  if(d>startSlot1 && d<endSlot1){\r\n    collection='QuestionBank-Slot1'\r\n  }else if(d>startSlot2 && d<endSlot2){\r\n    collection='QuestionBank-Slot2'\r\n  }else{\r\n    collection='Questions'\r\n  }\r\n\r\n  //useEffect for fetching questions from the database\r\n  const [ques,setQues]=useState([]);\r\n  useEffect(()=>{\r\n    firebaseApp.firestore().collection(collection).limit(30).onSnapshot(snapshot=>{\r\n      setQues(\r\n        snapshot.docs.map(doc=>({\r\n            que:doc.data().question,\r\n            opta:doc.data().A,\r\n            optb:doc.data().B,\r\n            optc:doc.data().C,\r\n            optd:doc.data().D,\r\n            ans:doc.data().ans,\r\n          }))\r\n    )\r\n    })\r\n  }\r\n  ,[])\r\n\r\n  //Submit test function on clicking submit button\r\n  const submitTest=()=>{\r\n   numbers.map((number)=>{\r\n      for(let n=0; n<3; n++){\r\n          const input=document.getElementsByName(\"answer\"+(number))[n];\r\n          if(input.checked===true){\r\n            //Storing the user responses into the database\r\n            if(ques[number-1].ans===input.value){\r\n              firebaseApp.firestore().collection(\"AnswerBank/\"+sessionStorage.getItem(\"name\")+\"-\"+sessionStorage.getItem(\"sch\")+\"/Answers\").doc(\"answer\"+(number<10?\"0\"+number:number)).set({\r\n                actualAns:ques[number-1].ans,\r\n                userAns: input.value,\r\n                correct:true\r\n              })\r\n            }else{\r\n              firebaseApp.firestore().collection(\"AnswerBank/\"+sessionStorage.getItem(\"name\")+\"-\"+sessionStorage.getItem(\"sch\")+\"/Answers\").doc(\"answer\"+(number<10?\"0\"+number:number)).set({\r\n                actualAns:ques[number-1].ans,\r\n                userAns: input.value,\r\n                correct:false\r\n              })\r\n            }\r\n          }\r\n      }\r\n   })\r\n    history.push(\"/score\");\r\n    sessionStorage.removeItem(\"auth\");\r\n    sessionStorage.removeItem(\"submitTime\");\r\n }\r\n\r\n  //Loading Component\r\n  const [loading, setLoading]=useState(true);\r\n  //Loading Component Theme\r\n  const theme = createMuiTheme({\r\n        palette: {\r\n            primary: {\r\n                main: \"#06d6a0\",\r\n            },\r\n            secondary: {\r\n                main: \"#f1faee\",\r\n            },\r\n        },\r\n    });\r\n  setTimeout(() => {\r\n    setLoading(false);\r\n  }, 3000);\r\n\r\n  return (loading?\r\n  <ThemeProvider theme={theme}>\r\n    <LinearProgress />\r\n  </ThemeProvider>\r\n  :token?<div style={{'minHeight':'100vh'}}>\r\n    <div className=\"grid-container\">\r\n          <div style={{'padding':'25px 25px'}} className=\"grid-item\">\r\n             <h3 style={{'color':'#E63946', 'fontWeight':'bolder', 'textAlign':'left', 'fontSize':'1.3rem'}}>\r\n                RECRUITMENTS\r\n             </h3>\r\n          </div>\r\n          <div className=\"grid-item\" style={{ 'padding':'12px 0', 'color':'#f1faee'}}>\r\n            <div style={{'display':'inline'}} className=\"d-flex justify-content-center\">\r\n              <img alt=\"timer-img\" height=\"40px\" width=\"40px\" src=\"timer.png\" />\r\n            </div>\r\n            <Timer func={submitTest} style={{'display':'flex', 'justifyContent':'center'}} />\r\n          </div>\r\n          <div className=\"grid-item\">\r\n            <button onClick={submitTest} className=\"submit-btn\">SUBMIT</button>\r\n          </div>\r\n      </div>\r\n\r\n\r\n    <div id='contain' className=\"question_section\">\r\n      <form id=\"mainForm\">\r\n      <div className=\"question-container\">\r\n        <div \r\n             id=\"carouselExampleIndicators\" \r\n             className=\"carousel\" \r\n             data-ride=\"false\" \r\n             data-interval=\"false\" \r\n             data-wrap=\"false\"\r\n             data-touch=\"false\"\r\n             data-keyboard=\"false\">\r\n                  <div className=\"questionToggles\">\r\n                      <div style={{'display':'inline-block'}} data-target=\"#carouselExampleIndicators\" onClick={()=>{setActive(0)}} data-slide-to=\"0\">\r\n                        <button className=\"toggleButton\"><img alt=\"thumb-img\" src=\"luck.png\" width=\"27px\" height=\"27px\" /></button>\r\n                      </div>\r\n                      {numbers.map(number=>{\r\n                        return (<div style={{'display':'inline-block'}} data-target=\"#carouselExampleIndicators\" onClick={()=>{setActive(number)}} data-slide-to={number}>\r\n                            <button style={window.innerWidth>600?{'margin':'11.2px'}:{}} className=\"toggleButton\">{number}</button>\r\n                        </div>)\r\n                      })}\r\n                  </div>  \r\n          <div className=\"carousel-inner\">\r\n              <div style={{'padding':'100px 0', 'fontSize':'1.3rem'}} className=\"carousel-item active text-center\">\r\n                Best of Luck.\r\n                <br />\r\n                <br />\r\n                <span>\r\n                  <img alt=\"thumb-img\" height=\"100px\" width=\"100px\" src=\"luck.png\" />\r\n                </span>\r\n              </div>\r\n              {ques.map((qv,i) =>{\r\n                  return (<div className=\"carousel-item\">\r\n                              <div className=\"question\" style={{'whiteSpace':'pre-wrap'}}>\r\n                                  <p style={{'margin':'5px 0'}}>{\"Question  \" +(i+1)} / <span style={{'fontSize':'0.8rem'}}>30</span></p>\r\n                                  <div style={{'height':'0', 'borderTop':'1px dashed rgba(69, 123, 157,0.5)', 'marginBottom':'5px'}}></div><br />\r\n                                  <p>{ qv.que }</p>\r\n                                  <br />\r\n                              </div>\r\n                              <div className=\"Answer\">\r\n                                  <ul style={{'listStyle':'none','paddingInlineStart':'0'}}>\r\n                                    <li>\r\n                                      <input\r\n                                        type=\"radio\"\r\n                                        id={(i+1)+\"_a\"}\r\n                                        name={\"answer\"+(i+1)}\r\n                                        className={\"answer\"+(i+1)}\r\n                                        value=\"A\"\r\n                                      />\r\n                                      <label className=\"option grid-c\" htmlFor={(i+1)+\"_a\"}>\r\n                                      <span>A</span>{qv.opta}\r\n                                      </label>\r\n                                    </li>\r\n                                    <li>\r\n                                      <input\r\n                                        type=\"radio\"\r\n                                        id={(i+1)+\"_b\"}\r\n                                        name={\"answer\"+(i+1)}\r\n                                        className={\"answer\"+(i+1)}\r\n                                        value=\"B\"\r\n                                      />\r\n                                      <label className=\"option grid-c\" htmlFor={(i+1)+\"_b\"}>\r\n                                      <span>B</span>{qv.optb }</label>\r\n                                    </li>\r\n                                    <li>\r\n                                      <input\r\n                                        type=\"radio\"\r\n                                        id={(i+1)+\"_c\"}\r\n                                        name={\"answer\"+(i+1)}\r\n                                        className={\"answer\"+(i+1)}\r\n                                        value=\"C\"\r\n                                      />\r\n                                      <label className=\"option grid-c\" htmlFor={(i+1)+\"_c\"}>\r\n                                      <span>C</span>{qv.optc}\r\n                                      </label>\r\n                                    </li>\r\n                                    <li>\r\n                                      <input\r\n                                        type=\"radio\"\r\n                                        id={(i+1)+\"_d\"}\r\n                                        name={\"answer\"+(i+1)}\r\n                                        className={\"answer\"+(i+1)}\r\n                                        value=\"D\"\r\n                                      />\r\n                                      <label className=\"option grid-c\" htmlFor={(i+1)+\"_d\"}>\r\n                                      <span>D</span>{qv.optd}\r\n                                      </label>\r\n                                    </li>\r\n                                  </ul>\r\n                              </div>\r\n                        </div>)\r\n              })}\r\n          </div>\r\n          <a\r\n            onClick={decrement}\r\n            className=\"carousel-control prev\"\r\n            href=\"#carouselExampleIndicators\"\r\n            role=\"button\"\r\n            data-slide=\"prev\"\r\n          ><i className=\"fas fa-arrow-left\"></i> Prev\r\n          </a>\r\n          <a\r\n            onClick={increment}\r\n            className=\"carousel-control next\"\r\n            href=\"#carouselExampleIndicators\"\r\n            role=\"button\"\r\n            data-slide=\"next\"\r\n          >Next <i className=\"fas fa-arrow-right\"></i>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  {/* popover --- help */}\r\n  <button className=\"pop-btn\"aria-describedby={id} variant=\"contained\" color=\"primary\" onClick={handleClick}>\r\n        ?\r\n  </button>\r\n  <Popover\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'center',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'center',\r\n        }}\r\n      >\r\n      <div style={{'padding':'20px'}}>\r\n        In case of any queries, call -\r\n        <br />\r\n        Aman - +91 8269366460\r\n        <br />\r\n        Yash - +91 8529736944\r\n      </div>\r\n  </Popover>\r\n  {/* popover --- help */}\r\n\r\n  </div>  \r\n  :\r\n  <Redirect to=\"/\" />\r\n  );\r\n}\r\n\r\n//Shuffle an array\r\n\r\n// function shuffle(array) {\r\n//   var currentIndex = array.length, temporaryValue, randomIndex;\r\n\r\n//   // While there remain elements to shuffle...\r\n//   while (0 !== currentIndex) {\r\n\r\n//     // Pick a remaining element...\r\n//     randomIndex = Math.floor(Math.random() * currentIndex);\r\n//     currentIndex -= 1;\r\n\r\n//     // And swap it with the current element.\r\n//     temporaryValue = array[currentIndex];\r\n//     array[currentIndex] = array[randomIndex];\r\n//     array[randomIndex] = temporaryValue;\r\n//   }\r\n\r\n//   return array;\r\n// }","D:\\Projects\\QCM-recruitments\\src\\components\\Score.jsx",[],"D:\\Projects\\QCM-recruitments\\src\\firebase.js",[],"D:\\Projects\\QCM-recruitments\\src\\components\\Brand.jsx",[],"D:\\Projects\\QCM-recruitments\\src\\components\\Event.jsx",[],"D:\\Projects\\QCM-recruitments\\src\\components\\TestNotStarted.jsx",[],"D:\\Projects\\QCM-recruitments\\src\\components\\Timer.jsx",["76"],"import React,{ useEffect, useState }  from 'react'\r\n\r\nfunction Timer(props) {\r\n    const calculateTimeLeft = () => {\r\n        const countdownDate= sessionStorage.getItem(\"submitTime\");\r\n        const difference = countdownDate - +new Date();\r\n        let timeLeft = {};\r\n    \r\n        if (difference > 0) {\r\n          timeLeft = {\r\n            days: Math.floor(difference / (1000 * 60 * 60 * 24)),\r\n            hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\r\n            minutes: Math.floor((difference / 1000 / 60) % 60),\r\n            seconds: Math.floor((difference / 1000) % 60),\r\n          };\r\n        }\r\n    \r\n        return timeLeft;\r\n      };\r\n\r\n      const [timeLeft, setTimeLeft] = useState(calculateTimeLeft());\r\n    \r\n      useEffect(() => {\r\n        setTimeout(() => {\r\n          setTimeLeft(calculateTimeLeft());\r\n        }, 1000);\r\n      });\r\n    // const [timeLeft, setTimeLeft]=useState(1800);\r\n    // useEffect(()=>{\r\n    //     setTimeout(() => {\r\n    //       setTimeLeft(timeLeft-1);\r\n    //     }, 1000);\r\n    // })\r\n    // let minutes=Math.floor(timeLeft/60);\r\n    // let seconds=timeLeft %60;\r\n\r\n    useEffect(()=>{\r\n      if(!timeLeft.minutes && !timeLeft.seconds){\r\n        props.func();\r\n      }\r\n    }, [timeLeft.seconds])\r\n\r\n    return (\r\n        <div className=\"Timer d-flex justify-content-center\">\r\n        <div style={{'fontWeight':'bold'}}>\r\n          <p style={{'textAlign':'center', 'margin':'0', 'padding':'0', 'color':timeLeft.minutes?'#f1faee':'#E63946'}}>\r\n            {timeLeft.minutes?(timeLeft.minutes<=9?\"0\"+timeLeft.minutes:timeLeft.minutes):\"00\"}\r\n            : \r\n            {timeLeft.seconds?(timeLeft.seconds<=9?\"0\"+timeLeft.seconds:timeLeft.seconds):\"00\"}\r\n          </p>        \r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Timer;\r\n","D:\\Projects\\QCM-recruitments\\src\\components\\SocialMedia.jsx",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":87,"column":5,"nodeType":"83","endLine":87,"endColumn":14,"suggestions":"84"},{"ruleId":"81","severity":1,"message":"85","line":51,"column":5,"nodeType":"86","endLine":51,"endColumn":14,"suggestions":"87"},{"ruleId":"81","severity":1,"message":"88","line":84,"column":4,"nodeType":"86","endLine":84,"endColumn":6,"suggestions":"89"},{"ruleId":"90","severity":1,"message":"91","line":88,"column":24,"nodeType":"92","messageId":"93","endLine":88,"endColumn":26},{"ruleId":"81","severity":1,"message":"94","line":41,"column":8,"nodeType":"86","endLine":41,"endColumn":26,"suggestions":"95"},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setRender'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [bypass] as a second argument to the useEffect Hook.","Identifier",["98"],"React Hook useEffect has a missing dependency: 'active'. Either include it or remove the dependency array.","ArrayExpression",["99"],"React Hook useEffect has a missing dependency: 'collection'. Either include it or remove the dependency array.",["100"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'props' and 'timeLeft.minutes'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["101"],"no-global-assign","no-unsafe-negation",{"desc":"102","fix":"103"},{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},"Add dependencies array: [bypass]",{"range":"110","text":"111"},"Update the dependencies array to be: [active, numbers]",{"range":"112","text":"113"},"Update the dependencies array to be: [collection]",{"range":"114","text":"115"},"Update the dependencies array to be: [props, timeLeft.minutes, timeLeft.seconds]",{"range":"116","text":"117"},[4183,4183],", [bypass]",[1748,1757],"[active, numbers]",[2792,2794],"[collection]",[1240,1258],"[props, timeLeft.minutes, timeLeft.seconds]"]