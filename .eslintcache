[{"D:\\Projects\\QCM-recruitments\\src\\index.js":"1","D:\\Projects\\QCM-recruitments\\src\\components\\App.jsx":"2","D:\\Projects\\QCM-recruitments\\src\\components\\Landing.jsx":"3","D:\\Projects\\QCM-recruitments\\src\\components\\LeaderBoard.jsx":"4","D:\\Projects\\QCM-recruitments\\src\\components\\Instructions.jsx":"5","D:\\Projects\\QCM-recruitments\\src\\components\\AdminAuth.jsx":"6","D:\\Projects\\QCM-recruitments\\src\\components\\Admin.jsx":"7","D:\\Projects\\QCM-recruitments\\src\\components\\NotFound.jsx":"8","D:\\Projects\\QCM-recruitments\\src\\components\\Quiz.jsx":"9","D:\\Projects\\QCM-recruitments\\src\\components\\Score.jsx":"10","D:\\Projects\\QCM-recruitments\\src\\firebase.js":"11","D:\\Projects\\QCM-recruitments\\src\\components\\Brand.jsx":"12","D:\\Projects\\QCM-recruitments\\src\\components\\Event.jsx":"13","D:\\Projects\\QCM-recruitments\\src\\components\\TestNotStarted.jsx":"14","D:\\Projects\\QCM-recruitments\\src\\components\\Timer.jsx":"15","D:\\Projects\\QCM-recruitments\\src\\components\\SocialMedia.jsx":"16","D:\\Projects\\QCM-recruitments\\src\\components\\Registration.jsx":"17","D:\\Projects\\QCM-recruitments\\src\\components\\RegClosed.jsx":"18","D:\\Projects\\QCM-recruitments\\src\\components\\Loader.jsx":"19","D:\\Projects\\QCM-recruitments\\src\\cities.js":"20"},{"size":222,"mtime":1624538078885,"results":"21","hashOfConfig":"22"},{"size":1202,"mtime":1627322190649,"results":"23","hashOfConfig":"22"},{"size":4885,"mtime":1627376355736,"results":"24","hashOfConfig":"22"},{"size":1941,"mtime":1624538078878,"results":"25","hashOfConfig":"22"},{"size":3193,"mtime":1627368610111,"results":"26","hashOfConfig":"22"},{"size":1585,"mtime":1624607629963,"results":"27","hashOfConfig":"22"},{"size":5840,"mtime":1627373000381,"results":"28","hashOfConfig":"22"},{"size":669,"mtime":1624538078878,"results":"29","hashOfConfig":"22"},{"size":14907,"mtime":1627380052438,"results":"30","hashOfConfig":"22"},{"size":3446,"mtime":1627374373898,"results":"31","hashOfConfig":"22"},{"size":538,"mtime":1627319002797,"results":"32","hashOfConfig":"22"},{"size":611,"mtime":1624557940922,"results":"33","hashOfConfig":"22"},{"size":213,"mtime":1624559159421,"results":"34","hashOfConfig":"22"},{"size":1055,"mtime":1627367962945,"results":"35","hashOfConfig":"22"},{"size":1807,"mtime":1624538078884,"results":"36","hashOfConfig":"22"},{"size":959,"mtime":1624538078882,"results":"37","hashOfConfig":"22"},{"size":6490,"mtime":1627378742194,"results":"38","hashOfConfig":"22"},{"size":935,"mtime":1627323716570,"results":"39","hashOfConfig":"22"},{"size":207,"mtime":1627364703009,"results":"40","hashOfConfig":"22"},{"size":113256,"mtime":1627378564545,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"15zuot6",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Projects\\QCM-recruitments\\src\\index.js",[],"D:\\Projects\\QCM-recruitments\\src\\components\\App.jsx",[],"D:\\Projects\\QCM-recruitments\\src\\components\\Landing.jsx",["83"],"D:\\Projects\\QCM-recruitments\\src\\components\\LeaderBoard.jsx",[],"D:\\Projects\\QCM-recruitments\\src\\components\\Instructions.jsx",[],"D:\\Projects\\QCM-recruitments\\src\\components\\AdminAuth.jsx",[],"D:\\Projects\\QCM-recruitments\\src\\components\\Admin.jsx",[],"D:\\Projects\\QCM-recruitments\\src\\components\\NotFound.jsx",[],"D:\\Projects\\QCM-recruitments\\src\\components\\Quiz.jsx",["84","85"],"import { React, useEffect, useState } from \"react\";\r\nimport Timer from \"./Timer\";\r\nimport firebaseApp from \"../firebase\";\r\nimport { useHistory, Redirect } from \"react-router-dom\";\r\nimport { LinearProgress, Popover } from \"@material-ui/core\";\r\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\r\n\r\nexport default function Quiz() {\r\n  //Popover\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? \"simple-popover\" : undefined;\r\n  //Popover\r\n\r\n  //useEffect for fetching questions from the database\r\n  const [ques, setQues] = useState([]);\r\n  useEffect(() => {\r\n    firebaseApp\r\n      .firestore()\r\n      .collection(\"Questions\")\r\n      .limit(30)\r\n      .onSnapshot((snapshot) => {\r\n        setQues(\r\n          snapshot.docs.map((doc) => ({\r\n            que: doc.data().question,\r\n            opta: doc.data().A,\r\n            optb: doc.data().B,\r\n            optc: doc.data().C,\r\n            optd: doc.data().D,\r\n            ans: doc.data().ans,\r\n            cat:doc.data().category,\r\n            img:doc.data().img\r\n          }))\r\n        );\r\n      });\r\n  }, []);\r\n\r\n  ques.sort((a,b)=>{\r\n    return a.cat.localeCompare(b.cat);\r\n  })\r\n  ques.forEach(q=>{\r\n    if(q.img.length){\r\n      firebaseApp.storage().ref().child(q.img).getDownloadURL().then(url=>{\r\n        q[\"imgURL\"]=url;\r\n      })\r\n    }\r\n  })\r\n\r\n\r\n  const history = useHistory();\r\n  const token = sessionStorage.getItem(\"auth\");\r\n  const numbers = [];\r\n\r\n  for (let i = 1; i <= ques.length; i++) numbers.push(i);\r\n\r\n  //useState hook to highlight the corresponding question toggle button\r\n  let [active, setActive] = useState(0);\r\n  //Increment on pushing next button\r\n  const increment = () => {\r\n    if (active !== ques.length) {\r\n      setActive(active + 1);\r\n    }\r\n  };\r\n  //Decrement on pushing previous button\r\n  const decrement = () => {\r\n    if (active !== 0) {\r\n      setActive(active - 1);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (document.getElementsByClassName(\"question_section\").length) {\r\n      //Setting color of all the buttons to light blue\r\n      document\r\n        .querySelectorAll('[data-target=\"#carouselExampleIndicators\"]')\r\n        .forEach((element) => {\r\n          element.children[0].style.backgroundColor = \"#457B9D\";\r\n        });\r\n      //Highlighting only the active button\r\n      let p = document.querySelectorAll('[data-slide-to=\"' + active + '\"]')[0]\r\n        .children[0];\r\n      p.scrollIntoView({ inline: \"center\", top: \"-20px\" });\r\n      p.style.backgroundColor = \"#06d6a0\";\r\n    }\r\n  }, [numbers]);\r\n\r\n  //Submit test function on clicking submit button\r\n  const submitTest = () => {\r\n    numbers.map((number) => {\r\n      for (let n = 0; n <= 3; n++) {\r\n        const input = document.getElementsByName(\"answer\" + number)[n];\r\n        if (input.checked === true) {\r\n          //Storing the user responses into the database\r\n          if (ques[number - 1].ans === input.value) {\r\n            firebaseApp\r\n              .firestore()\r\n              .collection(\r\n                \"AnswerBank/\" +sessionStorage.getItem(\"user\") +\r\n                  \"/Answers\"\r\n              )\r\n              .doc(\"answer\" + (number < 10 ? \"0\" + number : number))\r\n              .set({\r\n                actualAns: ques[number - 1].ans,\r\n                userAns: input.value,\r\n                correct: true,\r\n              });\r\n          } else {\r\n            firebaseApp\r\n              .firestore()\r\n              .collection(\r\n                \"AnswerBank/\" +\r\n                  sessionStorage.getItem(\"user\") +\r\n                  \"/Answers\"\r\n              )\r\n              .doc(\"answer\" + (number < 10 ? \"0\" + number : number))\r\n              .set({\r\n                actualAns: ques[number - 1].ans,\r\n                userAns: input.value,\r\n                correct: false,\r\n              });\r\n          }\r\n        }\r\n      }\r\n    });\r\n    history.push(\"/score\");\r\n    sessionStorage.removeItem(\"auth\");\r\n    sessionStorage.removeItem(\"submitTime\");\r\n  };\r\n\r\n  //Loading Component\r\n  const [loading, setLoading] = useState(true);\r\n  //Loading Component Theme\r\n  const theme = createMuiTheme({\r\n    palette: {\r\n      primary: {\r\n        main: \"#06d6a0\",\r\n      },\r\n      secondary: {\r\n        main: \"#f1faee\",\r\n      },\r\n    },\r\n  });\r\n  setTimeout(() => {\r\n    setLoading(false);\r\n  }, 3000);\r\n\r\n  return loading ? (\r\n    <ThemeProvider theme={theme}>\r\n      <LinearProgress />\r\n    </ThemeProvider>\r\n  ) : token ? (\r\n    <div style={{ minHeight: \"100vh\" }}>\r\n      <div className=\"grid-container\">\r\n        <div style={{ padding: \"25px 25px\" }} className=\"grid-item\">\r\n          <h3\r\n            style={{\r\n              color: \"#E63946\",\r\n              fontWeight: \"bolder\",\r\n              textAlign: \"left\",\r\n              fontSize: window.innerWidth>700?\"2rem\":\"1.5rem\",\r\n            }}\r\n          >\r\n            QCM\r\n          </h3>\r\n        </div>\r\n        <div\r\n          className=\"grid-item\"\r\n          style={{ padding: \"12px 0\", color: \"#f1faee\" }}\r\n        >\r\n          <div\r\n            style={{ display: \"inline\" }}\r\n            className=\"d-flex justify-content-center\"\r\n          >\r\n            <img alt=\"timer-img\" height=\"40px\" width=\"40px\" src=\"timer.png\" />\r\n          </div>\r\n          <Timer\r\n            func={submitTest}\r\n            style={{ display: \"flex\", justifyContent: \"center\" }}\r\n          />\r\n        </div>\r\n        <div className=\"grid-item\">\r\n          <button onClick={submitTest} className=\"submit-btn\">\r\n            SUBMIT\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div id=\"contain\" className=\"question_section\">\r\n        <form id=\"mainForm\">\r\n          <div className=\"question-container\">\r\n            <div\r\n              id=\"carouselExampleIndicators\"\r\n              className=\"carousel\"\r\n              data-ride=\"false\"\r\n              data-interval=\"false\"\r\n              data-wrap=\"false\"\r\n              data-touch=\"false\"\r\n              data-keyboard=\"false\"\r\n            >\r\n              <div className=\"questionToggles\">\r\n                <div\r\n                  style={{ display: \"inline-block\" }}\r\n                  data-target=\"#carouselExampleIndicators\"\r\n                  onClick={() => {\r\n                    setActive(0);\r\n                  }}\r\n                  data-slide-to=\"0\"\r\n                >\r\n                  <button className=\"toggleButton\">\r\n                    <img\r\n                      alt=\"thumb-img\"\r\n                      src=\"luck.png\"\r\n                      width=\"27px\"\r\n                      height=\"27px\"\r\n                    />\r\n                  </button>\r\n                </div>\r\n                {numbers.map((number) => {\r\n                  return (\r\n                    <div\r\n                      style={{ display: \"inline-block\" }}\r\n                      data-target=\"#carouselExampleIndicators\"\r\n                      onClick={() => {\r\n                        setActive(number);\r\n                      }}\r\n                      data-slide-to={number}\r\n                    >\r\n                      <button\r\n                        style={\r\n                          window.innerWidth > 600 ? { margin: \"11.2px\" } : {}\r\n                        }\r\n                        className=\"toggleButton\"\r\n                      >\r\n                        {number}\r\n                      </button>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n              <div className=\"carousel-inner\">\r\n                <div\r\n                  style={{ padding: \"100px 0\", fontSize: \"1.3rem\" }}\r\n                  className=\"carousel-item active text-center\"\r\n                >\r\n                  Best of Luck.\r\n                  <br />\r\n                  <br />\r\n                  <span>\r\n                    <img\r\n                      alt=\"thumb-img\"\r\n                      height=\"100px\"\r\n                      width=\"100px\"\r\n                      src=\"luck.png\"\r\n                    />\r\n                  </span>\r\n                </div>\r\n                {ques.map((qv, i) => {\r\n                  return (\r\n                    <div className=\"carousel-item\">\r\n                      <div\r\n                        className=\"question\"\r\n                        style={{ whiteSpace: \"pre-wrap\" }}\r\n                      >\r\n                        <p style={{ margin: \"5px 0\" }}>\r\n                          {\"Question  \" + (i + 1)} /{\" \"}\r\n                          <span style={{ fontSize: \"0.8rem\" }}>\r\n                            {ques.length}\r\n                          </span>\r\n                          <span style={{'float':'right', 'opacity':'0.5'}}>{qv.cat}</span>\r\n                        </p>\r\n                        <div\r\n                          style={{\r\n                            height: \"0\",\r\n                            borderTop: \"1px dashed rgba(69, 123, 157,0.5)\",\r\n                            marginBottom: \"5px\",\r\n                          }}\r\n                        ></div>\r\n                        <br />\r\n                        <p>{qv.que}</p>\r\n                        {qv.imgURL?<div>\r\n                            <br />\r\n                            <div className=\"d-flex justify-content-center\">\r\n                              <div className=\"ques-img shadow-lg\"><img src={qv.imgURL} alt=\"ques-img\" /></div>\r\n                            </div>\r\n                            <br />\r\n                            <br />\r\n                          </div>:\"\"\r\n                        }\r\n                      </div>\r\n                      <div className=\"Answer\">\r\n                        <ul\r\n                          style={{ listStyle: \"none\", paddingInlineStart: \"0\" }}\r\n                        >\r\n                          <li>\r\n                            <input\r\n                              type=\"radio\"\r\n                              id={i + 1 + \"_a\"}\r\n                              name={\"answer\" + (i + 1)}\r\n                              className={\"answer\" + (i + 1)}\r\n                              value=\"A\"\r\n                            />\r\n                            <label\r\n                              className=\"option grid-c\"\r\n                              htmlFor={i + 1 + \"_a\"}\r\n                            >\r\n                              <span>A</span>\r\n                              {qv.opta}\r\n                            </label>\r\n                          </li>\r\n                          <li>\r\n                            <input\r\n                              type=\"radio\"\r\n                              id={i + 1 + \"_b\"}\r\n                              name={\"answer\" + (i + 1)}\r\n                              className={\"answer\" + (i + 1)}\r\n                              value=\"B\"\r\n                            />\r\n                            <label\r\n                              className=\"option grid-c\"\r\n                              htmlFor={i + 1 + \"_b\"}\r\n                            >\r\n                              <span>B</span>\r\n                              {qv.optb}\r\n                            </label>\r\n                          </li>\r\n                          <li>\r\n                            <input\r\n                              type=\"radio\"\r\n                              id={i + 1 + \"_c\"}\r\n                              name={\"answer\" + (i + 1)}\r\n                              className={\"answer\" + (i + 1)}\r\n                              value=\"C\"\r\n                            />\r\n                            <label\r\n                              className=\"option grid-c\"\r\n                              htmlFor={i + 1 + \"_c\"}\r\n                            >\r\n                              <span>C</span>\r\n                              {qv.optc}\r\n                            </label>\r\n                          </li>\r\n                          <li>\r\n                            <input\r\n                              type=\"radio\"\r\n                              id={i + 1 + \"_d\"}\r\n                              name={\"answer\" + (i + 1)}\r\n                              className={\"answer\" + (i + 1)}\r\n                              value=\"D\"\r\n                            />\r\n                            <label\r\n                              className=\"option grid-c\"\r\n                              htmlFor={i + 1 + \"_d\"}\r\n                            >\r\n                              <span>D</span>\r\n                              {qv.optd}\r\n                            </label>\r\n                          </li>\r\n                        </ul>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n              <a\r\n                onClick={decrement}\r\n                className=\"carousel-control prev\"\r\n                href=\"#carouselExampleIndicators\"\r\n                role=\"button\"\r\n                data-slide=\"prev\"\r\n              >\r\n                <i className=\"fas fa-arrow-left\"></i> Prev\r\n              </a>\r\n              <a\r\n                onClick={increment}\r\n                className=\"carousel-control next\"\r\n                href=\"#carouselExampleIndicators\"\r\n                role=\"button\"\r\n                data-slide=\"next\"\r\n              >\r\n                Next <i className=\"fas fa-arrow-right\"></i>\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      {/* popover --- help */}\r\n      <button\r\n        className=\"pop-btn\"\r\n        aria-describedby={id}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={handleClick}\r\n      >\r\n        ?\r\n      </button>\r\n      <Popover\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"center\",\r\n        }}\r\n        transformOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"center\",\r\n        }}\r\n      >\r\n        <div style={{ padding: \"20px\" }}>\r\n          In case of any queries, call -\r\n          <br />\r\n          Aman - +91 8269366460\r\n          <br />\r\n          Yash - +91 8529736944\r\n        </div>\r\n      </Popover>\r\n      {/* popover --- help */}\r\n    </div>\r\n  ) : (\r\n    <Redirect to=\"/\" />\r\n  );\r\n}\r\n\r\n//Shuffle an array\r\n\r\n// function shuffle(array) {\r\n//   var currentIndex = array.length, temporaryValue, randomIndex;\r\n\r\n//   // While there remain elements to shuffle...\r\n//   while (0 !== currentIndex) {\r\n\r\n//     // Pick a remaining element...\r\n//     randomIndex = Math.floor(Math.random() * currentIndex);\r\n//     currentIndex -= 1;\r\n\r\n//     // And swap it with the current element.\r\n//     temporaryValue = array[currentIndex];\r\n//     array[currentIndex] = array[randomIndex];\r\n//     array[randomIndex] = temporaryValue;\r\n//   }\r\n\r\n//   return array;\r\n// }\r\n","D:\\Projects\\QCM-recruitments\\src\\components\\Score.jsx",["86"],"D:\\Projects\\QCM-recruitments\\src\\firebase.js",[],"D:\\Projects\\QCM-recruitments\\src\\components\\Brand.jsx",[],"D:\\Projects\\QCM-recruitments\\src\\components\\Event.jsx",[],"D:\\Projects\\QCM-recruitments\\src\\components\\TestNotStarted.jsx",[],"D:\\Projects\\QCM-recruitments\\src\\components\\Timer.jsx",["87"],"D:\\Projects\\QCM-recruitments\\src\\components\\SocialMedia.jsx",[],"D:\\Projects\\QCM-recruitments\\src\\components\\Registration.jsx",["88","89"],"D:\\Projects\\QCM-recruitments\\src\\components\\RegClosed.jsx",[],"D:\\Projects\\QCM-recruitments\\src\\components\\Loader.jsx",[],"D:\\Projects\\QCM-recruitments\\src\\cities.js",[],{"ruleId":"90","severity":1,"message":"91","line":73,"column":5,"nodeType":"92","endLine":73,"endColumn":14,"suggestions":"93"},{"ruleId":"90","severity":1,"message":"94","line":90,"column":6,"nodeType":"95","endLine":90,"endColumn":15,"suggestions":"96"},{"ruleId":"97","severity":1,"message":"98","line":94,"column":26,"nodeType":"99","messageId":"100","endLine":94,"endColumn":28},{"ruleId":"90","severity":1,"message":"101","line":52,"column":7,"nodeType":"95","endLine":52,"endColumn":9,"suggestions":"102"},{"ruleId":"90","severity":1,"message":"103","line":41,"column":8,"nodeType":"95","endLine":41,"endColumn":26,"suggestions":"104"},{"ruleId":"105","severity":1,"message":"106","line":2,"column":10,"nodeType":"92","messageId":"107","endLine":2,"endColumn":20},{"ruleId":"90","severity":1,"message":"91","line":100,"column":5,"nodeType":"92","endLine":100,"endColumn":14,"suggestions":"108"},"react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setRender'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [bypass] as a second argument to the useEffect Hook.","Identifier",["109"],"React Hook useEffect has a missing dependency: 'active'. Either include it or remove the dependency array.","ArrayExpression",["110"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["111"],"React Hook useEffect has missing dependencies: 'props' and 'timeLeft.minutes'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["112"],"no-unused-vars","'useHistory' is defined but never used.","unusedVar",["113"],{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},{"desc":"114","fix":"122"},"Add dependencies array: [bypass]",{"range":"123","text":"124"},"Update the dependencies array to be: [active, numbers]",{"range":"125","text":"126"},"Update the dependencies array to be: [user]",{"range":"127","text":"128"},"Update the dependencies array to be: [props, timeLeft.minutes, timeLeft.seconds]",{"range":"129","text":"130"},{"range":"131","text":"124"},[3463,3463],", [bypass]",[2709,2718],"[active, numbers]",[1778,1780],"[user]",[1240,1258],"[props, timeLeft.minutes, timeLeft.seconds]",[3976,3976]]