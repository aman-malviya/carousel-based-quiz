[{"E:\\Programming\\Learning Web Development\\test-qcm\\src\\index.js":"1","E:\\Programming\\Learning Web Development\\test-qcm\\src\\App.jsx":"2","E:\\Programming\\Learning Web Development\\test-qcm\\src\\Questions.js":"3","E:\\Programming\\Learning Web Development\\test-qcm\\src\\Timer.jsx":"4","E:\\Programming\\Learning Web Development\\heroku-test-qcm\\src\\index.js":"5","E:\\Programming\\Learning Web Development\\heroku-test-qcm\\src\\Questions.js":"6","E:\\Programming\\Learning Web Development\\heroku-test-qcm\\src\\firebase.js":"7","E:\\Programming\\Learning Web Development\\heroku-test-qcm\\src\\components\\App.jsx":"8","E:\\Programming\\Learning Web Development\\heroku-test-qcm\\src\\components\\Quiz.jsx":"9","E:\\Programming\\Learning Web Development\\heroku-test-qcm\\src\\components\\Landing.jsx":"10","E:\\Programming\\Learning Web Development\\heroku-test-qcm\\src\\components\\Otp.jsx":"11","E:\\Programming\\Learning Web Development\\heroku-test-qcm\\src\\components\\Admin.jsx":"12","E:\\Programming\\Learning Web Development\\heroku-test-qcm\\src\\components\\Instructions.jsx":"13","E:\\Programming\\Learning Web Development\\heroku-test-qcm\\src\\components\\Timer.jsx":"14","E:\\Programming\\Learning Web Development\\heroku-test-qcm\\src\\components\\AdminAuth.jsx":"15","E:\\Programming\\Learning Web Development\\heroku-test-qcm\\src\\components\\RegistrationPage.jsx":"16","E:\\Programming\\Learning Web Development\\heroku-test-qcm\\src\\components\\Score.jsx":"17"},{"size":211,"mtime":1608313770740,"results":"18","hashOfConfig":"19"},{"size":6301,"mtime":1608363843526,"results":"20","hashOfConfig":"19"},{"size":2499,"mtime":1608361456610,"results":"21","hashOfConfig":"19"},{"size":477,"mtime":1608363676838,"results":"22","hashOfConfig":"19"},{"size":222,"mtime":1608552397089,"results":"23","hashOfConfig":"24"},{"size":2701,"mtime":1608712083183,"results":"25","hashOfConfig":"24"},{"size":501,"mtime":1608657999147,"results":"26","hashOfConfig":"24"},{"size":1161,"mtime":1608789700332,"results":"27","hashOfConfig":"24"},{"size":8621,"mtime":1608907452564,"results":"28","hashOfConfig":"24"},{"size":5664,"mtime":1608917910697,"results":"29","hashOfConfig":"24"},{"size":774,"mtime":1608552358264,"results":"30","hashOfConfig":"24"},{"size":3745,"mtime":1608917169887,"results":"31","hashOfConfig":"24"},{"size":2283,"mtime":1608552347777,"results":"32","hashOfConfig":"24"},{"size":1596,"mtime":1608905784020,"results":"33","hashOfConfig":"24"},{"size":1940,"mtime":1608905421543,"results":"34","hashOfConfig":"24"},{"size":2857,"mtime":1608657790972,"results":"35","hashOfConfig":"24"},{"size":1368,"mtime":1608906323542,"results":"36","hashOfConfig":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"wztie0",{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"i5diz6",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"47"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"47"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"47"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"E:\\Programming\\Learning Web Development\\test-qcm\\src\\index.js",[],"E:\\Programming\\Learning Web Development\\test-qcm\\src\\App.jsx",["76"],"E:\\Programming\\Learning Web Development\\test-qcm\\src\\Questions.js",[],"E:\\Programming\\Learning Web Development\\test-qcm\\src\\Timer.jsx",["77"],"E:\\Programming\\Learning Web Development\\heroku-test-qcm\\src\\index.js",[],["78","79"],"E:\\Programming\\Learning Web Development\\heroku-test-qcm\\src\\Questions.js",[],["80","81"],"E:\\Programming\\Learning Web Development\\heroku-test-qcm\\src\\firebase.js",[],"E:\\Programming\\Learning Web Development\\heroku-test-qcm\\src\\components\\App.jsx",["82"],"import React from 'react'\r\n// import {useEffect} from 'react'\r\nimport {BrowserRouter as Router, Switch, Route, Redirect} from 'react-router-dom'\r\nimport Quiz from './Quiz'\r\nimport Landing from './Landing'\r\nimport Otp from './Otp'\r\n// import {auth} from '../firebase';\r\nimport Admin from './Admin'\r\nimport Instructions from './Instructions'\r\nimport AdminAuth from './AdminAuth'\r\nimport Score from './Score'\r\n\r\nexport default function App(){\r\n    // useEffect(()=>{\r\n    //     auth.onAuthStateChanged((authUser))=>{\r\n    //         if(authUser)\r\n    //         {\r\n    //             //user is logged in\r\n    //         }\r\n    //         else {\r\n    //             //user is logged out\r\n    //         }\r\n    //     }\r\n    // })\r\n    return(<div>\r\n       <Router>\r\n    <Switch>\r\n    <Route path='/' exact><Landing /></Route>\r\n    <Route path='/verification'><Otp /></Route>\r\n    <Route path='/quiz'><Quiz /></Route>\r\n    <Route path='/admin-login'><AdminAuth /></Route>\r\n    <Route path='/admin'><Admin /></Route>\r\n    <Route path='/instructions'><Instructions /></Route>\r\n    <Route path='/score'><Score /></Route>\r\n    </Switch>\r\n    </Router>\r\n    </div>)\r\n}\r\n","E:\\Programming\\Learning Web Development\\heroku-test-qcm\\src\\components\\Quiz.jsx",["83"],"import {React, useEffect, useState} from 'react';\r\nimport Timer from './Timer';\r\nimport {db} from '../firebase'\r\nimport {useHistory} from 'react-router-dom'\r\nexport default function Quiz() {\r\n  const history=useHistory();\r\n  const numbers=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30];\r\n \r\n  let [active, setActive] =useState(0);\r\n\r\n  const increment=()=>{\r\n    if(active!==30){\r\n      setActive(active+1);\r\n    }\r\n  }\r\n  const decrement=()=>{\r\n    if(active!==0){\r\n      setActive(active-1);\r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n    document.querySelectorAll('[data-target=\"#carouselExampleIndicators\"]').forEach((element)=>{\r\n      element.children[0].style.backgroundColor='#457B9D';\r\n    })\r\n    \r\n    let p=document.querySelectorAll('[data-slide-to=\"'+ (active) +'\"]')[0].children[0];\r\n    p.scrollIntoView({inline:'center', top:'-20px'});\r\n    p.style.backgroundColor=\"#06d6a0\";\r\n\r\n  },[numbers]);\r\n\r\n  const [ques,setQues]=useState([]);\r\n  useEffect(()=>{\r\n    db.collection('Questions').onSnapshot(snapshot=>{\r\n      setQues(\r\n        snapshot.docs.map(doc=>({\r\n            que:doc.data().question,\r\n            opta:doc.data().A,\r\n            optb:doc.data().B,\r\n            optc:doc.data().C,\r\n            optd:doc.data().D,\r\n          }))\r\n    )\r\n    })\r\n  }\r\n  \r\n  ,[])\r\n const submitTest=()=>{\r\n    history.push(\"/score\");\r\n }\r\n\r\n  return (<div style={{'minHeight':'100vh'}}>\r\n    <div className=\"grid-container\">\r\n          <div style={{'padding':'25px 25px'}} className=\"grid-item\">\r\n             <h3 style={{'color':'#E63946', 'fontWeight':'bolder', 'textAlign':'left'}}>\r\n                V<span style={{'fontSize':'1.2rem'}}>I</span>H<span style={{'fontSize':'1.2rem'}}>AA</span>N\r\n             </h3>\r\n          </div>\r\n          <div className=\"grid-item\" style={{ 'padding':'12px 0', 'color':'#f1faee'}}>\r\n            <div style={{'display':'inline'}} className=\"d-flex justify-content-center\">\r\n              <img alt=\"timer-img\" height=\"40px\" width=\"40px\" src=\"timer.png\" />\r\n            </div>\r\n            <Timer style={{'display':'flex', 'justifyContent':'center'}} />\r\n          </div>\r\n          <div className=\"grid-item\">\r\n            <button onClick={submitTest} className=\"submit-btn\">SUBMIT</button>\r\n          </div>\r\n      </div>\r\n    <div className=\"question_section\">\r\n      {/* <p>{ques.\r\n            map(qv=>\r\n            (<div>\r\n                  <p>{qv.que}</p>\r\n                  <p>{qv.opta}</p>\r\n                  <p>{qv.optb}</p>\r\n                  <p>{qv.optc}</p>\r\n                  <p>{qv.optd}</p>\r\n              </div>))}\r\n      </p> */}\r\n\r\n      <form id=\"mainForm\">\r\n      <div className=\"question-container\">\r\n        <div \r\n             id=\"carouselExampleIndicators\" \r\n             className=\"carousel\" \r\n             data-ride=\"false\" \r\n             data-interval=\"false\" \r\n             data-wrap=\"false\"\r\n             data-touch=\"false\"\r\n             data-keyboard=\"false\">\r\n                  <div className=\"questionToggles\">\r\n                      <div style={{'display':'inline-block'}} data-target=\"#carouselExampleIndicators\" onClick={()=>{setActive(0)}} data-slide-to=\"0\">\r\n                        <button className=\"toggleButton\"><img alt=\"thumb-img\" src=\"luck.png\" width=\"27px\" height=\"27px\" /></button>\r\n                      </div>\r\n                      {numbers.map(number=>{\r\n                        return (<div style={{'display':'inline-block'}} data-target=\"#carouselExampleIndicators\" onClick={()=>{setActive(number)}} data-slide-to={number}>\r\n                            <button style={window.innerWidth>600?{'margin':'11.2px'}:{}} className=\"toggleButton\">{number}</button>\r\n                        </div>)\r\n                      })}\r\n                  </div>  \r\n          <div className=\"carousel-inner\">\r\n              <div style={{'padding':'100px 0', 'fontSize':'1.3rem'}} className=\"carousel-item active text-center\">\r\n                Best of Luck.\r\n                <br />\r\n                <br />\r\n                <span>\r\n                  <img alt=\"thumb-img\" height=\"100px\" width=\"100px\" src=\"luck.png\" />\r\n                </span>\r\n              </div>\r\n              {ques.map((qv,i) =>{\r\n                  return (<div className=\"carousel-item wow fadeIn\" data-wow-duration=\"0.3s\">\r\n                              <div className=\"question\">\r\n                                  <p style={{'margin':'5px 0'}}>{\"Question  \" +(i+1)} / <span style={{'fontSize':'0.8rem'}}>30</span></p>\r\n                                  <div style={{'height':'0', 'borderTop':'1px dashed rgba(69, 123, 157,0.5)', 'marginBottom':'5px'}}></div>\r\n                                  <p>{ qv.que }</p>\r\n                                  \r\n                              </div>\r\n                              <div className=\"Answer\">\r\n                                  <ul style={{'listStyle':'none','paddingInlineStart':'0'}}>\r\n                                    <li>\r\n                                      <input\r\n                                        // onChange={e=>setAns(e.target.value)}\r\n                                        type=\"radio\"\r\n                                        id={qv.opta}\r\n                                        name={\"answer\"+(i+1)}\r\n                                        className={\"answer\"+(i+1)}\r\n                                        value={qv.opta}\r\n                                      />\r\n                                      <label className=\"option\" htmlFor={qv.opta}>\r\n                                      <span>A</span>{qv.opta }\r\n                                      </label>\r\n                                    </li>\r\n                                    <li>\r\n                                      <input\r\n                                        // onChange={e=>setAns(e.target.value)}\r\n                                        type=\"radio\"\r\n                                        id={qv.optb}\r\n                                        name={\"answer\"+(i+1)}\r\n                                        className={\"answer\"+(i+1)}\r\n                                        value={qv.optb}\r\n                                      />\r\n                                      <label className=\"option\" htmlFor={qv.optb}>\r\n                                      <span>B</span>{qv.optb }</label>\r\n                                    </li>\r\n                                    <li>\r\n                                      <input\r\n                                        // onChange={e=>setAns(e.target.value)}\r\n                                        type=\"radio\"\r\n                                        id={qv.optc}\r\n                                        name={\"answer\"+(i+1)}\r\n                                        className={\"answer\"+(i+1)}\r\n                                        value={qv.optc}\r\n                                      />\r\n                                      <label className=\"option\" htmlFor={qv.optc}>\r\n                                      <span>C</span>{qv.optc}\r\n                                      </label>\r\n                                    </li>\r\n                                    <li>\r\n                                      <input\r\n                                        // onChange={e=>setAns(e.target.value)}\r\n                                        type=\"radio\"\r\n                                        id={qv.optd}\r\n                                        name={\"answer\"+(i+1)}\r\n                                        className={\"answer\"+(i+1)}\r\n                                        value={qv.optd}\r\n                                      />\r\n                                      <label className=\"option\" htmlFor={qv.optd}>\r\n                                      <span>D</span>{qv.optd}\r\n                                      </label>\r\n                                    </li>\r\n                                  </ul>\r\n                              </div>\r\n                        </div>)\r\n              })}\r\n          </div>\r\n          <a\r\n            onClick={decrement}\r\n            className=\"carousel-control prev\"\r\n            href=\"#carouselExampleIndicators\"\r\n            role=\"button\"\r\n            data-slide=\"prev\"\r\n          ><i className=\"fas fa-arrow-left\"></i> Prev\r\n          </a>\r\n          <a\r\n            onClick={increment}\r\n            className=\"carousel-control next\"\r\n            href=\"#carouselExampleIndicators\"\r\n            role=\"button\"\r\n            data-slide=\"next\"\r\n          >Next <i className=\"fas fa-arrow-right\"></i>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  </div>  \r\n  );\r\n}\r\n","E:\\Programming\\Learning Web Development\\heroku-test-qcm\\src\\components\\Landing.jsx",[],"E:\\Programming\\Learning Web Development\\heroku-test-qcm\\src\\components\\Otp.jsx",[],"E:\\Programming\\Learning Web Development\\heroku-test-qcm\\src\\components\\Admin.jsx",[],"E:\\Programming\\Learning Web Development\\heroku-test-qcm\\src\\components\\Instructions.jsx",[],"E:\\Programming\\Learning Web Development\\heroku-test-qcm\\src\\components\\Timer.jsx",[],"E:\\Programming\\Learning Web Development\\heroku-test-qcm\\src\\components\\AdminAuth.jsx",["84"],"import React, {useState} from 'react'\r\nimport {db} from '../firebase'\r\nimport {useHistory} from 'react-router-dom'\r\nexport default function AdminAuth(){\r\n     \r\n      return(<div className=\"landing-page\">\r\n        <div className=\"d-flex justify-content-center\">\r\n            <LoginPage />\r\n        </div>\r\n        <div className=\"brand\">\r\n            Quizzers' Club\r\n            <br />\r\n            <span style={{'color':'#E63946', 'fontSize':'1.4rem'}}>\r\n                MANIT\r\n            </span>\r\n        </div>\r\n    </div>)\r\n}\r\n\r\nconst LoginPage=()=>{\r\n    const history = useHistory();\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [message, setMessage] =useState();\r\n    const handleClick=(e)=>{\r\n        e.preventDefault();\r\n        db.collection(\"admin-credentials\").onSnapshot((snapshot)=>{\r\n        snapshot.forEach((doc)=>{\r\n            if(doc.data().LoginId===email && doc.data().Password === password){\r\n                history.push(\"/admin\");\r\n            }else{\r\n                setMessage(<p style={{'color':'#E63946', 'textAlign':'center'}}>Wrong Credentials</p>);\r\n                setTimeout(()=>{\r\n                  setMessage(\"\");\r\n                },2000)\r\n            }\r\n        })\r\n    }) \r\n    }\r\n\r\n    return (<div className=\"landing-page\">\r\n        <h1 style={{'color':'#E63946', 'fontWeight':'bolder', 'textAlign':'center','fontSize':'3rem'}}>\r\n            V<span style={{'fontSize':'2.5rem'}}>I</span>H<span style={{'fontSize':'2.5rem'}}>AA</span>N\r\n        </h1>\r\n        <input value={email} onChange={(e)=>setEmail(e.target.value)} type=\"text\" placeholder=\"QCM Unique ID\" />\r\n        <input value={password} onChange={(e)=>setPassword(e.target.value)} type=\"password\" placeholder=\"Password\" />\r\n        <a>\r\n            <button onClick={handleClick}>\r\n                Login\r\n            </button>\r\n        </a>\r\n        {message}\r\n    </div>)\r\n}\r\n\r\n","E:\\Programming\\Learning Web Development\\heroku-test-qcm\\src\\components\\RegistrationPage.jsx",["85","86"],"E:\\Programming\\Learning Web Development\\heroku-test-qcm\\src\\components\\Score.jsx",[],{"ruleId":"87","severity":1,"message":"88","line":1,"column":16,"nodeType":"89","messageId":"90","endLine":1,"endColumn":24},{"ruleId":"87","severity":1,"message":"91","line":11,"column":17,"nodeType":"89","messageId":"90","endLine":11,"endColumn":26},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"92","replacedBy":"96"},{"ruleId":"94","replacedBy":"97"},{"ruleId":"87","severity":1,"message":"98","line":3,"column":49,"nodeType":"89","messageId":"90","endLine":3,"endColumn":57},{"ruleId":"99","severity":1,"message":"100","line":31,"column":5,"nodeType":"101","endLine":31,"endColumn":14,"suggestions":"102"},{"ruleId":"103","severity":1,"message":"104","line":47,"column":9,"nodeType":"105","endLine":47,"endColumn":12},{"ruleId":"87","severity":1,"message":"106","line":9,"column":12,"nodeType":"89","messageId":"90","endLine":9,"endColumn":17},{"ruleId":"87","severity":1,"message":"107","line":9,"column":18,"nodeType":"89","messageId":"90","endLine":9,"endColumn":26},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is assigned a value but never used.","no-native-reassign",["108"],"no-negated-in-lhs",["109"],["108"],["109"],"'Redirect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'active'. Either include it or remove the dependency array.","ArrayExpression",["110"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'first' is assigned a value but never used.","'setFirst' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"111","fix":"112"},"Update the dependencies array to be: [active, numbers]",{"range":"113","text":"114"},[926,935],"[active, numbers]"]