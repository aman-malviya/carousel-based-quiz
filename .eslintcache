[{"E:\\Programming\\Learning Web Development\\test-qcm\\src\\index.js":"1","E:\\Programming\\Learning Web Development\\test-qcm\\src\\App.jsx":"2","E:\\Programming\\Learning Web Development\\test-qcm\\src\\Questions.js":"3","E:\\Programming\\Learning Web Development\\test-qcm\\src\\Timer.jsx":"4","E:\\Programming\\Learning Web Development\\heroku-test-qcm\\src\\index.js":"5","E:\\Programming\\Learning Web Development\\heroku-test-qcm\\src\\Questions.js":"6","E:\\Programming\\Learning Web Development\\heroku-test-qcm\\src\\firebase.js":"7","E:\\Programming\\Learning Web Development\\heroku-test-qcm\\src\\components\\App.jsx":"8","E:\\Programming\\Learning Web Development\\heroku-test-qcm\\src\\components\\Quiz.jsx":"9","E:\\Programming\\Learning Web Development\\heroku-test-qcm\\src\\components\\Landing.jsx":"10","E:\\Programming\\Learning Web Development\\heroku-test-qcm\\src\\components\\Otp.jsx":"11","E:\\Programming\\Learning Web Development\\heroku-test-qcm\\src\\components\\Admin.jsx":"12","E:\\Programming\\Learning Web Development\\heroku-test-qcm\\src\\components\\Instructions.jsx":"13","E:\\Programming\\Learning Web Development\\heroku-test-qcm\\src\\components\\Timer.jsx":"14","E:\\Programming\\Learning Web Development\\heroku-test-qcm\\src\\components\\AdminAuth.jsx":"15","E:\\Programming\\Learning Web Development\\heroku-test-qcm\\src\\components\\RegistrationPage.jsx":"16"},{"size":211,"mtime":1608313770740,"results":"17","hashOfConfig":"18"},{"size":6301,"mtime":1608363843526,"results":"19","hashOfConfig":"18"},{"size":2499,"mtime":1608361456610,"results":"20","hashOfConfig":"18"},{"size":477,"mtime":1608363676838,"results":"21","hashOfConfig":"18"},{"size":222,"mtime":1608552397089,"results":"22","hashOfConfig":"23"},{"size":2701,"mtime":1608712083183,"results":"24","hashOfConfig":"23"},{"size":501,"mtime":1608657999147,"results":"25","hashOfConfig":"23"},{"size":1054,"mtime":1608651207111,"results":"26","hashOfConfig":"23"},{"size":5688,"mtime":1608731934729,"results":"27","hashOfConfig":"23"},{"size":3429,"mtime":1608657535821,"results":"28","hashOfConfig":"23"},{"size":774,"mtime":1608552358264,"results":"29","hashOfConfig":"23"},{"size":3324,"mtime":1608708571048,"results":"30","hashOfConfig":"23"},{"size":2283,"mtime":1608552347777,"results":"31","hashOfConfig":"23"},{"size":1576,"mtime":1608552370681,"results":"32","hashOfConfig":"23"},{"size":1609,"mtime":1608656965399,"results":"33","hashOfConfig":"23"},{"size":2857,"mtime":1608657790972,"results":"34","hashOfConfig":"23"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"wztie0",{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"i5diz6",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"45"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"45"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"45"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"45"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Programming\\Learning Web Development\\test-qcm\\src\\index.js",[],"E:\\Programming\\Learning Web Development\\test-qcm\\src\\App.jsx",["74"],"E:\\Programming\\Learning Web Development\\test-qcm\\src\\Questions.js",[],"E:\\Programming\\Learning Web Development\\test-qcm\\src\\Timer.jsx",["75"],"E:\\Programming\\Learning Web Development\\heroku-test-qcm\\src\\index.js",[],["76","77"],"E:\\Programming\\Learning Web Development\\heroku-test-qcm\\src\\Questions.js",[],"E:\\Programming\\Learning Web Development\\heroku-test-qcm\\src\\firebase.js",[],"E:\\Programming\\Learning Web Development\\heroku-test-qcm\\src\\components\\App.jsx",["78","79"],"import React, { useEffect } from 'react'\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\r\nimport Quiz from './Quiz'\r\nimport Landing from './Landing'\r\nimport Otp from './Otp'\r\nimport {auth} from '../firebase';\r\nimport Admin from './Admin'\r\nimport Instructions from './Instructions'\r\nimport AdminAuth from './AdminAuth'\r\n\r\nexport default function App(){\r\n    // useEffect(()=>{\r\n    //     auth.onAuthStateChanged((authUser))=>{\r\n    //         if(authUser)\r\n    //         {\r\n    //             //user is logged in\r\n    //         }\r\n    //         else {\r\n    //             //user is logged out\r\n    //         }\r\n    //     }\r\n    // })\r\n    return(<div>\r\n       <Router>\r\n    <Switch>\r\n    <Route path='/' exact><Landing /></Route>\r\n    <Route path='/verification'><Otp /></Route>\r\n    <Route path='/quiz'><Quiz /></Route>\r\n    <Route path='/admin-login'><AdminAuth /></Route>\r\n    <Route path='/admin'><Admin /></Route>\r\n    <Route path='/instructions'><Instructions /></Route>\r\n    </Switch>\r\n    </Router>\r\n    </div>)\r\n}\r\n","E:\\Programming\\Learning Web Development\\heroku-test-qcm\\src\\components\\Quiz.jsx",["80","81","82"],"E:\\Programming\\Learning Web Development\\heroku-test-qcm\\src\\components\\Landing.jsx",["83","84"],"import {React, useState} from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport {auth, db} from '../firebase';\r\nexport default function Landing(){\r\n\r\n    const [text, setText]=useState(\"\");\r\n\r\n    const [email,setEmail]=useState(\"\");         //email\r\n    const [tel,setTel]= useState(\"\");           //mobile\r\n    const [first,setFirst]=useState(\"\");         //first name\r\n    const [last,setLast]=useState(\"\");             //last name\r\n    const [post,setPost]=useState(\"\");             //post\r\n    const [scholar,setScholar]=useState(\"\");     //scholar no.\r\n\r\n    const history = useHistory();\r\n\r\n    const handleChange=(e)=>{\r\n        setText(e.target.value);\r\n        setFirst(e.target.value);\r\n    }\r\n    //register user with email and number as his password\r\n    const register = (event)=>{\r\n        event.preventDefault();\r\n        db.collection(\"user-details\").add({\r\n            firstName: first,\r\n            lastName: last,\r\n            post:post,\r\n            email:email,\r\n            mobile: tel,\r\n            scholar: scholar\r\n        })\r\n        history.push('/instructions');\r\n    };\r\n\r\n\r\n    return(\r\n    <div className='landing-page' style={window.innerWidth<500?{'paddingBottom':'35%'}:{'paddingBottom':'15%'}}>\r\n        <h1 style={{'color':'#E63946', 'fontWeight':'bolder', 'textAlign':'center','fontSize':'3rem'}}>\r\n            V<span style={{'fontSize':'2.5rem'}}>I</span>H<span style={{'fontSize':'2.5rem'}}>AA</span>N\r\n        </h1>\r\n        <div style={{'color':'#f1faee', 'padding':'2% 10%', 'textAlign':'center'}}>\r\n            <p>VIHAAN is QCM's opening event for session( It take place even before fresher's evening). The event is organized for the first year students to participate , learn and to let them know what awaits them in future. VIHAAN is a platform for the students, amateurs, quizzers and newcomers to mettle in quizzing.</p>\r\n        </div>\r\n        <h3>Hello {text} !</h3>\r\n        <div className=\"d-flex justify-content-center\">\r\n            <div>\r\n                <input value={first} onChange={handleChange} type=\"text\" placeholder=\"First Name\" />\r\n                <input value={last} onChange={event=>setLast(event.target.value)} type=\"text\" placeholder=\"Last Name\" />\r\n                <select value={post} onChange={event=>setPost(event.target.value)}>\r\n                    <option value=\"Executive\">Executive</option>\r\n                    <option value=\"Quizzer\">Quizzer</option>\r\n                    <option value=\"Web Developer\">Web Developer</option>\r\n                    <option value=\"Content Writer\">Content Writer</option>\r\n                    <option value=\"Photographer\">Photographer</option>\r\n                </select>\r\n                <input value ={email} onChange={event=>setEmail(event.target.value)} type=\"email\" placeholder=\"Email Address\" />\r\n                <input value={tel} onChange={event=>setTel(event.target.value)} type=\"tel\" placeholder=\"Mobile Number\" />\r\n                <input value={scholar} onChange={event=>setScholar(event.target.value)} type=\"number\" placeholder=\"Scholar Number\" />\r\n            </div>\r\n        </div>\r\n        <div className=\"d-flex justify-content-center\"><a><button onClick={register}>Submit</button></a></div>\r\n        <div className=\"brand\">\r\n            Quizzers' Club\r\n            <br />\r\n            <span style={{'color':'#E63946', 'fontSize':'1.4rem'}}>MANIT</span>\r\n        </div>\r\n    </div>\r\n    )\r\n}","E:\\Programming\\Learning Web Development\\heroku-test-qcm\\src\\components\\Otp.jsx",[],"E:\\Programming\\Learning Web Development\\heroku-test-qcm\\src\\components\\Admin.jsx",["85"],"import React,{useState} from 'react'\r\nimport {db} from '../firebase'\r\nimport firebase from 'firebase'\r\nexport default function Admin(){\r\n    const [evt,setEvt]=useState(\"\");\r\n    const [question,setQuestion] = useState(\"\");\r\n    const [a,setA] = useState(\"\");\r\n    const [b,setB] = useState(\"\");\r\n    const [c,setC] = useState(\"\");\r\n    const [d,setD] = useState(\"\");\r\n    const [ans,setAns] = useState(\"\");\r\n    let [message, setMessage]=useState(\"\");\r\n\r\n    const addQuestion=(event)=>{\r\n        event.preventDefault();\r\n        db.collection('Questions').add({\r\n            event: evt,\r\n            question: question,\r\n            A: a,\r\n            B: b,\r\n            C: c,\r\n            D: d,\r\n            ans:ans,\r\n\r\n        }).then(setMessage(<p style={{'color':'#f1faee'}}>Successfully added to the database.</p>)      \r\n        ).catch((e)=>setMessage(<p style={{'color':'#E63946'}}>Some error has occured.</p>))\r\n        console.log(\"done\")\r\n        setTimeout(() => {\r\n            setMessage(\"\");\r\n        }, 3000);\r\n        setEvt(\"\");\r\n        setQuestion(\"\")\r\n        setA(\"\");\r\n        setB(\"\");\r\n        setC(\"\");\r\n        setD(\"\");\r\n        setAns(\"\");\r\n    }\r\n    return(<div className=\"landing-page\">\r\n                <h3>Have a good question in mind? Bring it On.</h3>\r\n                <form>\r\n                <div className=\"d-flex justify-content-center\">\r\n                    <div>\r\n                        <input value={evt} onChange={event=>setEvt(event.target.value)} type=\"text\" placeholder=\"Event Name\" />\r\n                        <textarea value={question} onChange={event=>setQuestion(event.target.value)} type=\"text\" placeholder=\"Question\" />\r\n                        <input value ={a} onChange={(event)=>setA(event.target.value)} type=\"text\" placeholder=\"Option 1\" />\r\n                        <input value={b} onChange={(event)=>setB(event.target.value)} type=\"text\" placeholder=\"Option 2\" />\r\n                        <input value={c} onChange={(event)=>setC(event.target.value)} type=\"text\" placeholder=\"Option 3\" />\r\n                        <input value={d} onChange={(event)=>setD(event.target.value)} type=\"text\" placeholder=\"Option 4\" />\r\n                        <select onClick={e=>setAns(e.target.value)}>\r\n                            <option value=\"No option selected\">Select the correct option</option> \r\n                            <option value=\"A\">A</option>\r\n                            <option value=\"B\">B</option>\r\n                            <option value=\"C\">C</option>\r\n                            <option value=\"D\">D</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"d-flex justify-content-center\">\r\n                    <a href=\"/verification\">\r\n                        <button onClick={addQuestion}>Push to the Database</button>\r\n                    </a>\r\n                </div>\r\n                <div style={{'padding':'0 10px', 'textAlign':'center'}}>{message}</div>\r\n                <div className=\"brand\">\r\n                    Quizzers' Club\r\n                    <br />\r\n                    <span style={{'color':'#E63946', 'fontSize':'1.4rem'}}>\r\n                        MANIT\r\n                    </span>\r\n                </div>\r\n                </form>\r\n            </div>\r\n        );\r\n}","E:\\Programming\\Learning Web Development\\heroku-test-qcm\\src\\components\\Instructions.jsx",[],"E:\\Programming\\Learning Web Development\\heroku-test-qcm\\src\\components\\Timer.jsx",["86","87"],"import React,{ useEffect, useState }  from 'react'\r\nimport './styleTimer.css'\r\nfunction Timer() {\r\n    const calculateTimeLeft = () => {\r\n        const countdownDate= new Date('December 20, 2020 23:15:00').getTime();\r\n        //curent timer +30 minutes  \r\n        let year = new Date().getFullYear();\r\n        const difference = countdownDate - +new Date();\r\n        let timeLeft = {};\r\n    \r\n        if (difference > 0) {\r\n          timeLeft = {\r\n            days: Math.floor(difference / (1000 * 60 * 60 * 24)),\r\n            hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\r\n            minutes: Math.floor((difference / 1000 / 60) % 60),\r\n            seconds: Math.floor((difference / 1000) % 60),\r\n          };\r\n        }\r\n    \r\n        return timeLeft;\r\n      };\r\n\r\n      const [timeLeft, setTimeLeft] = useState(calculateTimeLeft());\r\n      const [year] = useState(new Date().getFullYear());\r\n    \r\n      useEffect(() => {\r\n        setTimeout(() => {\r\n          setTimeLeft(calculateTimeLeft());\r\n        }, 1000);\r\n      });\r\n    \r\n      const timerComponents = [];\r\n    \r\n      Object.keys(timeLeft).forEach((interval) => {\r\n        if (!timeLeft[interval]) {\r\n          return;\r\n        }\r\n    \r\n        timerComponents.push(\r\n          <span>\r\n            {timeLeft[interval]} {interval}{\" \"}\r\n          </span>\r\n        );\r\n      });\r\n    \r\n    return (\r\n        <div className=\"Timer d-flex justify-content-center\">\r\n        <div>{timerComponents.length ? timerComponents : <span>Time's up!</span>}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Timer\r\n",["88","89"],"E:\\Programming\\Learning Web Development\\heroku-test-qcm\\src\\components\\AdminAuth.jsx",["90","91"],"import React, {useState, useEffect} from 'react'\r\nimport {auth} from '../firebase'\r\nimport {useHistory} from 'react-router-dom'\r\nexport default function AdminAuth(){\r\n\r\n    return(<div className=\"landing-page\">\r\n        <div className=\"d-flex justify-content-center\">\r\n            <LoginPage />\r\n        </div>\r\n        <div className=\"brand\">\r\n            Quizzers' Club\r\n            <br />\r\n            <span style={{'color':'#E63946', 'fontSize':'1.4rem'}}>\r\n                MANIT\r\n            </span>\r\n        </div>\r\n    </div>)\r\n}\r\n\r\nconst LoginPage=()=>{\r\n    let isRegisterd=false;\r\n    const history = useHistory();\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [isTrue, setTrue]=useState();\r\n    const handleClick=()=>{\r\n        isRegisterd?setTrue(<p></p>):setTrue(<p style={{'color':'#E63946'}}>Wrong Credentials</p>);\r\n    }\r\n    const signIn = e => {\r\n        e.preventDefault();\r\n\r\n        auth\r\n            .signInWithEmailAndPassword(email, password)\r\n            .then(auth => {\r\n                history.push('/admin')\r\n            })\r\n            .catch(error => alert(error.message))\r\n    }\r\n\r\n    return <div>\r\n        <input value={email} onChange={(e)=>setEmail(e.target.value)} type=\"text\" placeholder=\"QCM Unique ID\" />\r\n        <input value={password} onChange={(e)=>setPassword(e.target.value)} type=\"password\" placeholder=\"Password\" />\r\n        <a href={isRegisterd?\"/admin\":\"\"}>\r\n            <button onClick={handleClick}>\r\n                Login\r\n            </button>\r\n        </a>\r\n        {isTrue}\r\n    </div>\r\n}\r\n\r\n","E:\\Programming\\Learning Web Development\\heroku-test-qcm\\src\\components\\RegistrationPage.jsx",["92","93"],{"ruleId":"94","severity":1,"message":"95","line":1,"column":16,"nodeType":"96","messageId":"97","endLine":1,"endColumn":24},{"ruleId":"94","severity":1,"message":"98","line":11,"column":17,"nodeType":"96","messageId":"97","endLine":11,"endColumn":26},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"94","severity":1,"message":"103","line":1,"column":17,"nodeType":"96","messageId":"97","endLine":1,"endColumn":26},{"ruleId":"94","severity":1,"message":"104","line":6,"column":9,"nodeType":"96","messageId":"97","endLine":6,"endColumn":13},{"ruleId":"94","severity":1,"message":"95","line":1,"column":16,"nodeType":"96","messageId":"97","endLine":1,"endColumn":24},{"ruleId":"94","severity":1,"message":"105","line":4,"column":9,"nodeType":"96","messageId":"97","endLine":4,"endColumn":11},{"ruleId":"94","severity":1,"message":"106","line":8,"column":9,"nodeType":"96","messageId":"97","endLine":8,"endColumn":16},{"ruleId":"94","severity":1,"message":"104","line":3,"column":9,"nodeType":"96","messageId":"97","endLine":3,"endColumn":13},{"ruleId":"107","severity":1,"message":"108","line":61,"column":56,"nodeType":"109","endLine":61,"endColumn":59},{"ruleId":"94","severity":1,"message":"110","line":3,"column":8,"nodeType":"96","messageId":"97","endLine":3,"endColumn":16},{"ruleId":"94","severity":1,"message":"111","line":7,"column":13,"nodeType":"96","messageId":"97","endLine":7,"endColumn":17},{"ruleId":"94","severity":1,"message":"111","line":24,"column":14,"nodeType":"96","messageId":"97","endLine":24,"endColumn":18},{"ruleId":"99","replacedBy":"112"},{"ruleId":"101","replacedBy":"113"},{"ruleId":"94","severity":1,"message":"103","line":1,"column":26,"nodeType":"96","messageId":"97","endLine":1,"endColumn":35},{"ruleId":"94","severity":1,"message":"114","line":29,"column":11,"nodeType":"96","messageId":"97","endLine":29,"endColumn":17},{"ruleId":"94","severity":1,"message":"115","line":9,"column":12,"nodeType":"96","messageId":"97","endLine":9,"endColumn":17},{"ruleId":"94","severity":1,"message":"116","line":9,"column":18,"nodeType":"96","messageId":"97","endLine":9,"endColumn":26},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is assigned a value but never used.","no-native-reassign",["117"],"no-negated-in-lhs",["118"],"'useEffect' is defined but never used.","'auth' is defined but never used.","'db' is defined but never used.","'history' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'firebase' is defined but never used.","'year' is assigned a value but never used.",["117"],["118"],"'signIn' is assigned a value but never used.","'first' is assigned a value but never used.","'setFirst' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]